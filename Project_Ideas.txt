Create a simple movie recommendation system using NumPy. Each movie should be represented by a vector of genre ratings (e.g., Action, Comedy, Romance, Horror, Sci-Fi). Implement cosine similarity to compare movies based on their feature vectors and recommend the top N most similar movies to a selected one.
Requirements:
Use NumPy arrays to store movie features.
Define a function to calculate cosine similarity.
Create a function to return top N similar movies to a given one.
Use sample data of at least 5 movies and 5 genres.



Here are 5 more simple but powerful project ideas that will level up your NumPy skills and strengthen your understanding through hands-on practice.

ðŸ”¢ 1. Student Marks Analyzer
Concepts: NumPy arrays, mean, max, min, slicing, indexing

âœ¨ What you'll do:
Store marks of students in subjects using NumPy arrays.

Find highest, lowest, and average marks per subject and per student.

Detect toppers, failures, etc.

ðŸŽ¯ Real-world logic + perfect for understanding matrix operations

ðŸ§© 2. Sudoku Puzzle Validator
Concepts: 2D arrays, unique checks, row/column/box traversal

âœ¨ What you'll do:
Input a filled Sudoku grid (9x9) as a NumPy array.

Check if it's valid (each row, column, and 3Ã—3 box has numbers 1â€“9 with no repeats).

ðŸŽ¯ Sharpens your logical thinking with array operations

ðŸ“Š 3. Weather Data Simulator (NUMPY + PANDAS) IN PYCHARM
Concepts: Random data generation, reshaping, stats

âœ¨ What you'll do:
Simulate a week's temperature for 3 cities using NumPy's random module.

Analyze daily averages, hottest day, city-wise trends.

ðŸŽ¯ Combines random number generation + data manipulation

ðŸ“¦ 4. Inventory Management System (Mini Version)
Concepts: Arrays, element-wise operations, conditional checks

âœ¨ What you'll do:
Manage stock levels and prices of items.

Calculate total value, restock items with low inventory, and apply discounts.

ðŸŽ¯ Good practice for applying math to real business logic

ðŸ§  5. Image Grayscale Converter (Mini Simulation)
Concepts: 2D arrays, broadcasting, element manipulation

âœ¨ What you'll do:
Simulate a 3Ã—3 or 5Ã—5 image (RGB values) using NumPy.

Convert it to grayscale using weighted averaging of R, G, B.

ðŸŽ¯ A small taste of how NumPy is used in image processing

